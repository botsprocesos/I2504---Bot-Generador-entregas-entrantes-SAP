#!/usr/bin/env python3
"""
Script de prueba para verificar la conexi√≥n con SAP
"""

import os
import sys
import logging

# Agregar rutas para imports
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'bot_farmanet'))
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'shared'))

from abrirsap import ingresarsap
from sap import get_sap_session

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - TEST_SAP - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_sap_connection():
    """Prueba la conexi√≥n con SAP"""
    logger.info("=== PRUEBA DE CONEXI√ìN SAP ===")
    
    try:
        # 1. Abrir SAP
        logger.info("üîß Abriendo SAP GUI...")
        ingresarsap("PRD", "cprosianiuk", "Scienza2025Scienza2025#")
        logger.info("‚úÖ SAP abierto correctamente")
        
        # 2. Obtener sesi√≥n
        logger.info("üîë Obteniendo sesi√≥n de SAP...")
        sap_session = get_sap_session()
        logger.info("‚úÖ Sesi√≥n de SAP obtenida correctamente")
        
        # 3. Verificar que la sesi√≥n es v√°lida
        if sap_session:
            logger.info("‚úÖ Conexi√≥n con SAP exitosa")
            logger.info(f"üìã Informaci√≥n de sesi√≥n: {sap_session}")
            return True
        else:
            logger.error("‚ùå No se pudo obtener sesi√≥n de SAP")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå Error en conexi√≥n con SAP: {e}")
        return False

if __name__ == "__main__":
    success = test_sap_connection()
    if success:
        print("\n‚úÖ Prueba de conexi√≥n SAP exitosa")
    else:
        print("\n‚ùå Prueba de conexi√≥n SAP fallida") 